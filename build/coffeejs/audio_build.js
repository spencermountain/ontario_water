// Generated by CoffeeScript 1.8.0
var analysis, assets, build_all, mp3, ogg, path, rebuild, reconcile_paths, run_sync, shell;

shell = require("shelljs");

path = require("path");

run_sync = require("./cmd");

analysis = require("./analysis");

assets = path.join(__dirname, '../assets');

reconcile_paths = function(file, flag, ext) {
  var obj, old_ext;
  if (file == null) {
    file = "";
  }
  if (flag == null) {
    flag = "";
  }
  if (ext == null) {
    ext = "mp3";
  }
  obj = {};
  obj.input = path.join(assets, '/audio_master/', file);
  obj.name = path.basename(obj.input);
  old_ext = path.extname(obj.name);
  obj.output = path.join(assets, "/derivative", "" + (path.basename(obj.input, old_ext)) + flag + "." + ext);
  return obj;
};

ogg = function(file, h) {
  var obj;
  obj = reconcile_paths(file, "", "ogg");
  console.log(" ---ogg ---");
  run_sync("ffmpeg -i " + obj.input + " -y -acodec libvorbis -map 0:a:0 " + obj.output);
  analysis.diff(obj.input, obj.output);
  return obj.output;
};

mp3 = function(file, h) {
  var obj;
  obj = reconcile_paths(file, "", "mp3");
  console.log(" ---mp3 ---");
  run_sync("ffmpeg -i " + obj.input + " -y -acodec libmp3lame -map 0:a:0 " + obj.output);
  analysis.diff(obj.input, obj.output);
  return obj.output;
};

rebuild = function(file) {
  ogg(file);
  return mp3(file);
};

build_all = function() {
  var audios;
  audios = shell.ls("" + assets + "/audio_master/");
  return audios.forEach(function(f) {
    console.log("===" + f + "===");
    return rebuild(f);
  });
};

build_all();

//# sourceMappingURL=audio_build.js.map
