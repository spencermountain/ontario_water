// Generated by CoffeeScript 1.8.0
var arr;

arr = ["./libs/jquery.js", "./libs/sugar.js", "./libs/oj.js", "./libs/easings.js", "./libs/dirty.js", "./libs/inview.js", "./coffeejs/stages.js"];

head.js.apply(this, arr);

head(function() {
  var CURRENT_STAGE, determine_stage;
  oj.useGlobally();
  CURRENT_STAGE = null;
  determine_stage = function() {
    var found, i, s, _i, _len, _results;
    found = false;
    _results = [];
    for (i = _i = 0, _len = stages.length; _i < _len; i = ++_i) {
      s = stages[i];
      if (found === false && s.visibleY && s.visibleY !== "bottom") {
        CURRENT_STAGE = i;
        s.play();
        _results.push(found = true);
      } else if (s.visibleY && s.state !== "ready") {
        _results.push(s.stop());
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };
  return $("#main").oj(div(function() {
    h2({
      style: "color:grey; font-size:28px; padding:0px; margin:0px; height:700px; "
    }, function() {
      return "hi der!";
    });
    return stages.map(function(stage, i) {
      return div({
        "class": "stage",
        style: "height:650px; width:100%; border:1px solid grey; font-size:68px;",
        insert: function() {
          stage.el = $(this);
          return stage.render();
        },
        bind: {
          inview: function(event, isInView, visiblePartX, visibleY) {
            stage.visibleY = visibleY;
            determine_stage();
            return console.log(CURRENT_STAGE);
          }
        }
      }, function() {
        return i;
      });
    });
  }));
});

//# sourceMappingURL=index.js.map
